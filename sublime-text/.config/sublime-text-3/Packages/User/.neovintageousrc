" The character " (the double quote mark) starts a comment

" Commands                        Mode
" --------                        ----
" nmap, nnoremap, nunmap          Normal mode
" imap, inoremap, iunmap          Insert and Replace mode
" vmap, vnoremap, vunmap          Visual and Select mode
" xmap, xnoremap, xunmap          Visual mode
" smap, snoremap, sunmap          Select mode
" cmap, cnoremap, cunmap          Command-line mode
" omap, onoremap, ounmap          Operator pending mode


" Motion
" https://medium.com/@schtoeffel/you-don-t-need-more-than-one-cursor-in-vim-2c44117d51db
" ## Replace: cgn <new string>
" find word --> cgn --> new string --> escape --> . (replace next)
"                                             --> n (move to next)
"                                             --> u (undo last action)

" Surround
" ## Replace: cs<old><new>
" ## Add:     ysiw<new>
" ## Delete:  ds<old>



let mapleader=,

" Enable smartcase
" https://blog.gerardroche.com/2020/12/11/the-curious-case-of-vim-search/
:set ignorecase
:set smartcase


" Origami
nnoremap <leader>. :ToggleZoomPane fraction=0.9<CR>
nnoremap <leader>k :DestroyPane direction=self<CR>



" Redo with U or Ctrl+y instead of Ctrl+R
" Undo with u or Ctrl+z
nnoremap U     <C-r>
nnoremap <C-y> <C-r>
nnoremap <C-z> u

" Quick back to normal mode (<C-c> or CapsLock or Escape)

" Easier shortcut to trigger command
nnoremap <space> :

" " Visually select all content
nnoremap <leader>a ggvG
nnoremap <C-a> ggvG

" " Quick save
nnoremap <Leader>s :Save<CR>
" nnoremap <C-s> :Save<CR>
nnoremap <Leader>S :PromptSaveAs<CR>
" nnoremap <C-S-s> :PromptSaveAs<CR>

" " Quick close
nnoremap <Leader>q :Close<CR>
" nnoremap <C-w>     :Close<CR>

" " Quick restore
nnoremap <Leader>t :ReopenLastFile<CR>
" nnoremap <C-S-t>   :ReopenLastFile<CR>

" " Quick new file
nnoremap <Leader>n :NewFile<CR>
" nnoremap <C-n>     :NewFile<CR>


" Multiple cursors like in sublime multi selection
nnoremap <C-d> gh
snoremap <C-d> j
snoremap <C-p> k
snoremap <C-k> l
snoremap i <Esc>i

" Search without regex
nnoremap <leader>/ n/\V
nnoremap <leader>? n?\V


" Delete does not store data in a register
nnoremap x "_x
" Actual cut must be done using leader first
nnoremap <leader>x "+x
vnoremap <leader>x "+x

" Delete cut text to system register
nnoremap d "+d
nnoremap D "+D
vnoremap d "+d
" To avoid to fill register leader key must be used
nnoremap <leader>d "_d
nnoremap <leader>D "_D
vnoremap <leader>d "_d

" Store in clipboard
vnoremap y "+y
nnoremap y "+y
" Paste from clipboard
vnoremap p "+p
nnoremap p "+p
" Copy to clipboard (not needed because everything is store to clipboard now)
" vnoremap <C-c> "+y

" Newline without leaving normal mode
nnoremap <leader>o o<ESC>
nnoremap <leader>O O<ESC>

" " I like using H and L for beginning/end of line
" nmap H ^
" nmap L $

" Folds
nnoremap zc :Fold<CR>
nnoremap zo :Unfold<CR>
nnoremap zM :FoldAll<CR>
nnoremap zR :UnfoldAll<CR>


" AceJump plugin
" https://github.com/ice9js/ace-jump-sublime
nnoremap <leader><leader>a :AceJumpAfter<CR>
nnoremap <leader><leader>c :AceJumpChar<CR>
nnoremap <leader><leader>d :AceJumpAddCursor<CR>
nnoremap <leader><leader>i :AceJumpWithinLine<CR>
nnoremap <leader><leader>l :AceJumpLine<CR>
nnoremap <leader><leader>s :AceJumpSelect<CR>
nnoremap <leader><leader>w :AceJumpWord<CR>
