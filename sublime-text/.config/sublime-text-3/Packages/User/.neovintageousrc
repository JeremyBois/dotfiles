" The character " (the double quote mark) starts a comment

" Commands                        Mode
" --------                        ----
" nmap, nnoremap, nunmap          Normal mode
" imap, inoremap, iunmap          Insert and Replace mode
" vmap, vnoremap, vunmap          Visual and Select mode
" xmap, xnoremap, xunmap          Visual mode
" smap, snoremap, sunmap          Select mode
" cmap, cnoremap, cunmap          Command-line mode
" omap, onoremap, ounmap          Operator pending mode


" MEMO
" ----------------
" Surround plugin
" ## Replace: cs<old><new>
" ## Add:     ysiw<new>
" ## Delete:  ds<old>


" Motion
" https://medium.com/@schtoeffel/you-don-t-need-more-than-one-cursor-in-vim-2c44117d51db
" ## Replace: cgn <new string>
" find word --> cgn --> new string --> escape --> . (replace next)
"                                             --> n (move to next)
"                                             --> u (undo last action)

" Z based shortcuts
" ## Cursor position as view center: zz
" ## Cursor position as view top: zt
" ## Cursor position as view bottom: zb
" ## Close without saving: ZQ
" ## Close and ask for save: ZZ



" CONVENIENCE
" ----------------
" Make ";" synonymous with ":" to enter commands
" Conflict with Sneak/motion next
" nnoremap ; :

" leader using ","
let mapleader=,

" Enable smartcase
" https://blog.gerardroche.com/2020/12/11/the-curious-case-of-vim-search/
:set ignorecase
:set smartcase

" Visually select all content
nnoremap <leader>a ggvG

" Newline without leaving normal mode
nnoremap <leader>o o<ESC>
nnoremap <leader>O O<ESC>

" Search without regex
nnoremap <leader>/ n/\V
nnoremap <leader>? n?\V

" Be able to delete without poluting a register
" Delete without storing
nnoremap <leader>d "_d
nnoremap <leader>D "_D
vnoremap <leader>d "_d

" Store and paste in clipboard
" <C-c> and <C-v>
" Or using leader to populate clipboard
nnoremap <leader>p "+p
nnoremap <leader>P "+P
nnoremap <leader>Y "+Y
nnoremap <leader>y "+y


" SUBLIME COMMANDS
" ----------------
" Quick save
nnoremap <leader>s :Save<CR>
nnoremap <leader>S :PromptSaveAs<CR>

" Quick close
nnoremap <leader>q :Close<CR>

" Quick restore
nnoremap <leader>t :ReopenLastFile<CR>

" Quick new file
nnoremap <leader>n :NewFile<CR>

" Redo with U or Ctrl+y instead of Ctrl+R
" Undo with u or Ctrl+z
nnoremap U     <C-r>
nnoremap <C-y> <C-r>
nnoremap <C-z> u

" Sublime <C-d> using motion
snoremap <C-d> j
snoremap <C-p> k
snoremap <C-k> l
snoremap i <Esc>i

" Focus Folder Tree
" Opened using <M-x>
" Go back to previous file with <Esc>
nnoremap <leader>x <C-0>


" PLUGINS
" ----------------
" AceJump plugin
nnoremap <leader>c :AceJumpChar<CR>
nnoremap <leader>f :AceJumpWithinLine<CR>
nnoremap <leader>l :AceJumpLine<CR>
nnoremap <leader>w :AceJumpWord<CR>


" Origami plugin
nnoremap <leader>z :ToggleZoomPane fraction=0.9<CR>
nnoremap <leader>kk :DestroyPane direction=self<CR>


" LSP plugin
" Show information (overlap with SublimeHaskell)
nnoremap K <C-k><C-i>

" GoTo code navigation.
" nmap <silent> gd <Plug>(coc-definition)
nnoremap gd :LspSymbolDefinition<CR>
" " nmap <silent> gy <Plug>(coc-type-definition)
nnoremap gy :LspSymbolTypeDefinition<CR>
" " nmap <silent> gi <Plug>(coc-implementation)
nnoremap gi :LspSymbolImplementation<CR>
" " nmap <silent> gr <Plug>(coc-references)
nnoremap gr :LspTypeReferences<CR>
