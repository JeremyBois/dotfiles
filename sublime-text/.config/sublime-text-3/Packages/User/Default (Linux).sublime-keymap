[
    ////////////////////////////////////////////////////////////////////////////
    ///////////////////////  Navigation  ///////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////

    // Change focus group
    // Default keys
    // ctrl+1, ctrl+2, ...

    // Toogle sideBar
    { "keys": ["alt+x"], "command": "toggle_side_bar" },

    // Toogle menu
    {"keys": ["ctrl+alt+0"], "command": "toggle_menu"},

    // Toggle cmdPanel
    { "keys": ["ctrl+,"], "command": "show_panel", "args": {"panel": "console", "toggle": true} },

    // Control layout using default
    // --> Vertical
    // shift+Alt+"2"
    // shift+Alt+"3"
    // shift+Alt+"4"
    // --> Horizontal
    // shift+Alt+"9"
    // shift+Alt+"8"
    // shift+Alt+"7"


    // Move quickly between references
    { "keys": ["alt+k"], "command": "jump_back" },
    { "keys": ["alt+j"], "command": "jump_forward" },

    { "keys": ["alt+f"], "command": "open_dir",
      "args": {"dir": "$file_path", "file": "$file_name"} },

    ////////////////////////////////////////////////////////////////////////////
    ////////////////////////////  Autocompletion  //////////////////////////////
    ////////////////////////////////////////////////////////////////////////////

    { "keys": ["ctrl+space"], "command": "auto_complete" },
    { "keys": ["ctrl+space"], "command": "replace_completion_with_auto_complete",
        "context":
        [
            { "key": "last_command", "operator": "equal", "operand": "insert_best_completion" },
            { "key": "auto_complete_visible", "operator": "equal", "operand": false },
            { "key": "setting.tab_completion", "operator": "equal", "operand": true }
        ]
    },


    // ////////////////////////////////////////////////////////////////////////////
    // ///////////////////////// Intellisense /////////////////////////////////////
    // ////////////////////////////////////////////////////////////////////////////

    // When coding using Python
    {
        "command": "anaconda_goto", "keys": ["f12"], "context": [
            {"key": "selector", "operator": "equal", "operand": "source.python"}
        ]
    },
    {
        "command": "anaconda_find_usages", "keys": ["shift+f12"], "context": [
            {"key": "selector", "operator": "equal", "operand": "source.python"}
        ]
    },
    {
        "command": "anaconda_doc", "keys": ["ctrl+k", "ctrl+i"], "context": [
            {"key": "selector", "operator": "equal", "operand": "source.python"}
        ]
    },


    // // When coding using C#
    // {"command": "omni_sharp_go_to_definition", "keys": ["f12"],
    //     "context": [
    //         {"key" : "selector", "operator": "equal", "operand": "source.cs"}
    //     ]
    // },
    // {"command": "omni_sharp_find_usages", "keys": ["shift+F12"],
    //     "context": [
    //         {"key" : "selector", "operator": "equal", "operand": "source.cs"}
    //     ]
    // },
    // {"command": "omni_sharp_type_lookup", "keys": ["ctrl+k", "ctrl+i"],
    //     "context": [
    //         {"key" : "selector", "operator": "equal", "operand": "source.cs"}
    //     ]
    // },
    // // Must comment OmniSharp default to avoid losing ctrl+k, ctrl+d control
    // {"command": "omni_sharp_format_document", "keys": ["ctrl+alt+f"],
    //     "context": [
    //             {"key" : "selector", "operator": "equal", "operand": "source.cs"}
    //         ]
    // },

    // // When coding using C++
    // { "keys": ["f12"], "command": "ecc_goto_declaration",
    //     "context": [
    //             {"key" : "selector", "operator": "equal", "operand": "source.cpp"},
    //         ]
    // },


    // When coding using Haskell
    {
        "keys": ["ctrl+alt+m"],
        "context": [
            { "key": "haskell_source" },
            { "key": "scanned_source" },
        ],
        "command": "show_panel",
        "args": { "panel": "output.sublime_haskell_output_panel" }
    },

    ////////////////////////////////////////////////////////////////////////////
    //////////////////////////// Toggle theme //////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////
    {
      "keys": ["ctrl+alt+;"], "command": "toggle_theme"
    },

    ////////////////////////////////////////////////////////////////////////////
    ///////////////////////////// Vintageous ///////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////


    ////////////////////////////////////////////////////////////////////////////
    ////////////////////////////// Origami /////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////
    { "keys": ["ctrl+k", "k"], "command": "travel_to_pane", "args": {"direction": "up"} },
    { "keys": ["ctrl+k", "l"], "command": "travel_to_pane", "args": {"direction": "right"} },
    { "keys": ["ctrl+k", "j"], "command": "travel_to_pane", "args": {"direction": "down"} },
    { "keys": ["ctrl+k", "h"], "command": "travel_to_pane", "args": {"direction": "left"} },

    { "keys": ["ctrl+k", "ctrl+k"], "command": "carry_file_to_pane", "args": {"direction": "up"} },
    { "keys": ["ctrl+k", "ctrl+l"], "command": "carry_file_to_pane", "args": {"direction": "right"} },
    { "keys": ["ctrl+k", "ctrl+j"], "command": "carry_file_to_pane", "args": {"direction": "down"} },
    { "keys": ["ctrl+k", "ctrl+h"], "command": "carry_file_to_pane", "args": {"direction": "left"} },

    { "keys": ["ctrl+k", "alt+k"], "command": "create_pane_with_cloned_file", "args": {"direction": "up"} },
    { "keys": ["ctrl+k", "alt+l"], "command": "create_pane_with_cloned_file", "args": {"direction": "right"} },
    { "keys": ["ctrl+k", "alt+j"], "command": "create_pane_with_cloned_file", "args": {"direction": "down"} },
    { "keys": ["ctrl+k", "alt+h"], "command": "create_pane_with_cloned_file", "args": {"direction": "left"} },

    { "keys": ["ctrl+k", "K"], "command": "create_pane", "args": {"direction": "up", "give_focus": true} },
    { "keys": ["ctrl+k", "L"], "command": "create_pane", "args": {"direction": "right", "give_focus": true} },
    { "keys": ["ctrl+k", "J"], "command": "create_pane", "args": {"direction": "down", "give_focus": true} },
    { "keys": ["ctrl+k", "H"], "command": "create_pane", "args": {"direction": "left", "give_focus": true} },


    ////////////////////////////////////////////////////////////////////////////
    //////////////////////////////// SUBLIME-HASKELL ///////////////////////////
    ////////////////////////////////////////////////////////////////////////////
    // Currently not used in favor of LSP and HLS


    ////////////////////////////////////////////////////////////////////////////
    //////////////////////////////// LSP ///////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////
    // Document Symbols (a replacement for ST's "Goto Symbol")
    {"keys": ["ctrl+r"], "command": "lsp_document_symbols", "context": [{"key": "setting.lsp_active"}]},

    // Get information about the context under cursor
    {"keys": ["ctrl+k", "ctrl+i"], "command": "lsp_hover", "context": [{"key": "setting.lsp_active"}]},

    // Go To Definition
    {"keys": ["f12"], "command": "lsp_symbol_definition", "context": [{"key": "setting.lsp_active"}]},

     // Find Symbol References
    { "keys": ["shift+f12"], "command": "lsp_symbol_references", "context": [{"key": "setting.lsp_active"}]},
]
